import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
import os

BOT_TOKEN = os.environ.get("BOT_TOKEN")
BUY_LIMIT = 88.6  # –ú–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ñ–¥—É –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∞—Ä–±–∏—Ç—Ä–∞–∂–∞...")

async def set_limit(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global BUY_LIMIT
    try:
        BUY_LIMIT = float(context.args[0])
        await update.message.reply_text(f"–õ–∏–º–∏—Ç –Ω–∞ –ø–æ–∫—É–ø–∫—É —Ç–µ–ø–µ—Ä—å: {BUY_LIMIT} KGS")
    except:
        await update.message.reply_text("–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ –ª–∏–º–∏—Ç —á–∏—Å–ª–æ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä /setlimit 88.50")

async def profit(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        text = update.message.text.replace('/profit', '').strip()
        parts = dict(part.split('=') for part in text.split())

        buy_price = float(parts['–∫—É–ø–∏–ª'])
        sell_price = float(parts['–ø—Ä–æ–¥–∞–ª'])
        amount = float(parts['—Å—É–º–º–∞'])

        spent = buy_price * amount
        earned = sell_price * amount
        profit = earned - spent
        status = "–ü–†–ò–ë–´–õ–¨" if profit > 0 else "–£–ë–´–¢–û–ö"

        await update.message.reply_text(
            f"üìä {status}:\n"
            f"‚Ä¢ –ö—É–ø–ª–µ–Ω–æ: {amount} USDT –ø–æ {buy_price} = {spent:.2f} KGS\n"
            f"‚Ä¢ –ü—Ä–æ–¥–∞–∂–∞ –ø–æ {sell_price} = {earned:.2f} KGS\n"
            f"‚Ä¢ –†–∞–∑–Ω–∏—Ü–∞: {profit:.2f} KGS"
        )

    except Exception as e:
        logger.error(e)
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞. –§–æ—Ä–º–∞—Ç: /profit –∫—É–ø–∏–ª=88.50 –ø—Ä–æ–¥–∞–ª=84.10 —Å—É–º–º–∞=11.29")

if __name__ == '__main__':
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("setlimit", set_limit))
    app.add_handler(CommandHandler("profit", profit))
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    app.run_polling()
